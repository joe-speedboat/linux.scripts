- hosts: all
  become: False
  gather_facts: True
  # zabbix_fqdn host_vars:
  #   ansible_connection: httpapi
  #   ansible_httpapi_port": 443
  #   ansible_httpapi_use_ssl: True
  #   ansible_httpapi_validate_certs: False
  #   ansible_network_os: community.zabbix.zabbix
  #   ansible_user": zabbix-bind
  #   ansible_httpapi_pass: "xxx"
  #   ansible_zabbix_url_path: ""
  vars:
    zabbix_fqdn: zabbix.domain.tld
    zabbix_groups: []
  tasks:
  - name: find wan hosts
    set_fact:
      is_prod: >-
        {{ groups.keys() | select('match', 'hosts_.*_prod') | select('in', group_names) | list | length > 0 }}
      is_test: >-
        {{ groups.keys() | select('match', 'hosts_.*_test') | select('in', group_names) | list | length > 0 }}

  - name: set prod hostgroup
    set_fact:
      zabbix_groups:
      - prod
    when: is_prod

  - name: set test hostgroup
    set_fact:
      zabbix_groups:
      - test
    when: is_test

  - name: Create host groups
    community.zabbix.zabbix_group:
      host_groups: "{{ zabbix_groups }}"
      state: present
    delegate_to: "{{ zabbix_fqdn }}"
    run_once: True

  - name: Read host 
    community.zabbix.zabbix_host_info:
      host_name: "{{ inventory_hostname }}"
    register: zhost
    delegate_to: "{{ zabbix_fqdn }}"

  - debug: var=zhost

  - name: get existing host groups
    set_fact: 
      current_hostgroups: "{{ zhost.hosts[0].hostgroups | map(attribute='name') | list }}"
  - name: define final host groups
    set_fact: 
      final_hostgroups: "{{ current_hostgroups | union(zabbix_groups) }}"

  - debug: var=current_hostgroups
  - debug: var=final_hostgroups

  - name: Configure host 
    community.zabbix.zabbix_host:
      host_name: "{{ inventory_hostname }}"
      host_groups: "{{ final_hostgroups }}"
    delegate_to: "{{ zabbix_fqdn }}"

